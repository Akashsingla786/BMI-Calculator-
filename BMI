import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.GridLayout;

import javax.swing.JFrame;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
//import java.sql.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;

import javax.swing.JButton;

import javax.swing.JFrame;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import java.util.*;

public class BMI extends JFrame implements ActionListener {

    private static final JButton JButton = null;
    private JFrame frame;
    private JPanel panel;
    private JLabel heightLabel, weightLabel, BMILabel,result,category;
    private JTextField height, weight;
    private JButton calculate;
    String Height, Weight;
    double number1, number2, BMI;
    static String output = "Results";
    static int jopIcon = JOptionPane.QUESTION_MESSAGE;
    boolean bFlag = true; //state, true means no exception
    private JLabel lblNewLabel;
    private JLabel lblNewLabel_1;

    public BMI() {

        frame = new JFrame("BMI Calculator");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        heightLabel = new JLabel("Your height in meters:");
        weightLabel = new JLabel("Your weight in kilograms: ");
        BMILabel = new JLabel("Your BMI is : ");
        result = new JLabel("");
        category=new JLabel("");
        height = new JTextField(1);
        weight = new JTextField(1); 
        panel = new JPanel();

        
        panel.add(heightLabel);
        panel.add(height);
        panel.add(weightLabel);
        panel.add(weight);
        panel.add(BMILabel);
        panel.add(result);
                
                lblNewLabel = new JLabel("Category : ");
                panel.add(lblNewLabel);
        
                panel.add(category);
                
                lblNewLabel_1 = new JLabel();
                panel.add(lblNewLabel_1);
        
                calculate = new JButton("Calculate BMI");
                        panel.add(calculate);
                        
                        
                        
                      
                                calculate.addActionListener(this);


        frame.getContentPane().add(panel);

        JPanel p1 = new JPanel();
        panel.setLayout(new GridLayout(5, 1));
        getContentPane().add(p1, BorderLayout.SOUTH);

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 400);
        frame.setVisible(true);

    }

    public String getDateTime() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        return dateFormat.format(date);
    }

    public void calculateBMI(double number1, double number2) {
        try {
            BMI = number2 / ((number1) * (number1));

        } catch (NumberFormatException nfe) {
            output += "\n\n Whoa! Input error: must enter valid integers";
            jopIcon = JOptionPane.ERROR_MESSAGE;
        }
    }

    public void calculate() {
        Height = height.getText();
        Weight = weight.getText();

        try {
            number1 = Double.parseDouble(Height);
            number2 = Double.parseDouble(Weight);

            calculateBMI(number1, number2);



        } finally {

            if (BMI >= 40.0) {

                output += "\n\n  : Morbidly Obese";

            } else if (BMI >= 35.0 && BMI < 39.9) {

                output += "\n\n : Severely Obese";

            } else if (BMI >= 30.0 && BMI < 34.9) {
                output += " : Moderately Obese";

            } else if (BMI >=25.0 && BMI < 29.9) {
                output += "\n\n : Overweight";

            }
         else if (BMI >=18.5 && BMI < 24.9) {
            output += "\n\n : Normal";

        }
         else if (BMI >=16.0 && BMI < 18.4) {
            output += "\n\n : Underweight";

        }
         else
         {
        	 output += "\n\n : Severely Underweight";
         }
        }

    }

    public static void main(String[] args) {




        BMI bmi = new BMI();
        //System.out.println(output);


    }

    @Override
    public void actionPerformed(ActionEvent e) {
        this.calculate();

        result.setText(BMI+"\n" );
        category.setText(output);
    }
}
